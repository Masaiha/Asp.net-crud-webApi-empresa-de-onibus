// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ubus.Data.Context;

namespace Ubus.Data.Migrations
{
    [DbContext(typeof(TripContext))]
    partial class TripContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ubus.Business.Entities.Additional", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isHasAirConditioning")
                        .HasColumnType("bit");

                    b.Property<bool>("isHasBathroom")
                        .HasColumnType("bit");

                    b.Property<bool>("isHasMinibar")
                        .HasColumnType("bit");

                    b.Property<bool>("isHaswifi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BusId")
                        .IsUnique();

                    b.ToTable("Additionals");
                });

            modelBuilder.Entity("Ubus.Business.Entities.Bus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Bus");
                });

            modelBuilder.Entity("Ubus.Business.Entities.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("Integer");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(11)")
                        .HasMaxLength(11);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Drives");
                });

            modelBuilder.Entity("Ubus.Business.Entities.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RouteMap")
                        .IsRequired()
                        .HasColumnType("Nvarchar(2000)");

                    b.HasKey("Id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Ubus.Business.Entities.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("DateTime");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("Decimal");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("DriverId")
                        .IsUnique();

                    b.HasIndex("RouteId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("Ubus.Business.Entities.Additional", b =>
                {
                    b.HasOne("Ubus.Business.Entities.Bus", "Bus")
                        .WithOne("Additional")
                        .HasForeignKey("Ubus.Business.Entities.Additional", "BusId")
                        .IsRequired();
                });

            modelBuilder.Entity("Ubus.Business.Entities.Trip", b =>
                {
                    b.HasOne("Ubus.Business.Entities.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusId")
                        .IsRequired();

                    b.HasOne("Ubus.Business.Entities.Driver", "Driver")
                        .WithOne("Trip")
                        .HasForeignKey("Ubus.Business.Entities.Trip", "DriverId")
                        .IsRequired();

                    b.HasOne("Ubus.Business.Entities.Route", "Route")
                        .WithMany("Trips")
                        .HasForeignKey("RouteId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
